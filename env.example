# Environment Configuration Template
# Copy this file to .env and update the values according to your setup

# ===========================================
# APPLICATION CONFIGURATION
# ===========================================
NODE_ENV=development
PORT=8080
API_BASE_URL=http://localhost:8080
FRONTEND_URL=http://localhost:3000

# ===========================================
# CORS CONFIGURATION
# ===========================================
CORS_ALLOW_ALL_ORIGINS=true
CORS_CREDENTIALS=true
CORS_ALLOWED_ORIGINS=http://localhost:3000,http://localhost:5001,http://127.0.0.1:3000,http://127.0.0.1:5001,http://localhost:8080

# ===========================================
# DATABASE CONFIGURATION
# ===========================================
# SQLite is used for local data storage
# Database files are stored in the 'data' directory
# Network-specific database files:
#   - Network 1 (Ethereum Mainnet) → data/cow-mainnet.db
#   - Network 42161 (Arbitrum One) → data/cow-arbitrum.db
#   - Network 100 (Gnosis Chain) → data/cow-gnosis.db

# Optional: Override the default SQLite data directory
# SQLITE_DATA_DIR=./data

# ===========================================
# ETHEREUM CONFIGURATION
# ===========================================
COW_PROTOCOL_CONTRACT=0x9008D19f58AAbD9eD0d60971565AA8510560ab41

# ===========================================
# EXTERNAL API ENDPOINTS
# ===========================================
# La Tribu Services
PAIR_PRICING_API_URL=https://pair-pricing.la-tribu.xyz

# CoW Protocol API
COW_API_KEY=your_cow_api_key_here

# ===========================================
# API AUTHENTICATION
# ===========================================
PAIR_API_TOKEN=your_jwt_token_here

# ===========================================
# RPC BACKOFF CONFIGURATION
# ===========================================
RPC_BACKOFF_MAX_RETRIES=5
RPC_BACKOFF_BASE_DELAY=1000
RPC_BACKOFF_MAX_DELAY=30000
RPC_BACKOFF_MULTIPLIER=2
RPC_TIMEOUT_DELAY=600000

# ===========================================
# BATCH PROCESSING CONFIGURATION
# ===========================================
# Initial batch size for adaptive batching (starts here, then adapts)
# Higher values = faster initial sync but more memory usage
BATCH_SIZE=100

# Maximum batch size for adaptive batching (upper limit)
# Higher values = can process more blocks per batch when RPC allows
MAX_BATCH_SIZE=20000

# Minimum batch size for adaptive batching (lower limit)
# Lower values = more conservative when RPC limits are hit
MIN_BATCH_SIZE=50

# EthereumService internal batch limit (separate from adaptive batching)
# This should be much higher than MAX_BATCH_SIZE to avoid conflicts
ETHEREUM_MAX_BATCH_SIZE=10000

# Delay between batches (milliseconds)
# Higher values = slower sync but more stable
BATCH_DELAY_MS=2000

# ===========================================
# REALTIME SYNC CONFIGURATION
# ===========================================
REALTIME_POLLING_INTERVAL=1000
